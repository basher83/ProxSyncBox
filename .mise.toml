# Mise configuration for ProxSyncBox
[tools]
python = "3.11"
uv = "latest"
ruff = "latest"
mypy = "latest"
pre-commit = "latest"
node = "20"  # For prettier and markdownlint

[env]
VIRTUAL_ENV = ".venv"
PATH_add = [".venv/bin"]

[tasks.setup]
description = "Set up the development environment"
run = """
uv venv
uv pip install -e ".[dev]"
pre-commit install
echo "✅ Development environment ready!"
"""

[tasks.install]
description = "Install production dependencies"
run = "uv pip install -e ."

[tasks.install-dev]
description = "Install development dependencies"
run = "uv pip install -e '.[dev]'"

[tasks.lint]
description = "Run all linters"
depends = ["lint:ruff", "lint:mypy", "lint:markdown"]

[tasks."lint:ruff"]
description = "Run ruff linter"
run = "ruff check . --fix"

[tasks."lint:mypy"]
description = "Run mypy type checker"
run = "mypy ."

[tasks."lint:markdown"]
description = "Lint markdown files"
run = "markdownlint-cli2 '**/*.md'"

[tasks.format]
description = "Format all code"
depends = ["format:python", "format:markdown"]

[tasks."format:python"]
description = "Format Python code with ruff"
run = "ruff format ."

[tasks."format:markdown"]
description = "Format markdown files"
run = "prettier --write '**/*.md'"

[tasks.test]
description = "Run tests"
run = "pytest"

[tasks."test:watch"]
description = "Run tests in watch mode"
run = "pytest-watch"

[tasks."test:cov"]
description = "Run tests with coverage"
run = "pytest --cov"

[tasks.run]
description = "Run the ProxSyncBox GUI"
run = "python gui_app.py"

[tasks.clean]
description = "Clean up generated files"
run = """
rm -rf .ruff_cache
rm -rf .mypy_cache
rm -rf .pytest_cache
rm -rf htmlcov
rm -rf dist
rm -rf build
rm -rf *.egg-info
find . -type d -name __pycache__ -exec rm -rf {} +
find . -type f -name "*.pyc" -delete
echo "✨ Cleaned up!"
"""

[tasks.check]
description = "Run all checks (lint, format check, type check, tests)"
run = """
echo "🔍 Running ruff check..."
ruff check .
echo "📝 Checking formatting..."
ruff format --check .
echo "🔎 Running type check..."
mypy .
echo "🧪 Running tests..."
pytest
echo "✅ All checks passed!"
"""

[tasks."check:pre-commit"]
description = "Run pre-commit hooks on all files"
run = "pre-commit run --all-files"

[tasks.docs]
description = "Serve documentation locally"
run = "python -m http.server --directory docs 8080"

[tasks.upgrade]
description = "Upgrade all dependencies"
run = """
uv pip install --upgrade -e ".[dev]"
pre-commit autoupdate
echo "📦 Dependencies upgraded!"
"""

[tasks.dev]
description = "Start development mode with file watching"
run = """
echo "👀 Starting development mode..."
python gui_app.py
"""

[tasks.fix]
description = "Auto-fix all code issues"
run = """
echo "🔧 Fixing Python code..."
ruff check . --fix --unsafe-fixes
ruff format .
echo "📝 Fixing Markdown..."
markdownlint-cli2 --fix '**/*.md'
prettier --write '**/*.md'
echo "✨ All fixed!"
"""

[tasks.ci]
description = "Run CI checks locally"
run = """
echo "🚀 Running CI checks locally..."
mise run check
echo "✅ Ready for CI!"
"""

[tasks.deps]
description = "Show dependency tree"
run = "uv pip tree"

[tasks.outdated]
description = "Show outdated dependencies"
run = "uv pip list --outdated"

[tasks.security]
description = "Run security checks"
run = """
echo "🔒 Running security checks..."
bandit -r . --skip B101,B601
echo "✅ Security check complete!"
"""